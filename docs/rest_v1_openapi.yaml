openapi: 3.0.2
servers:
  - url: http://localhost:3370
    description: Local Linstor controller
info:
  description: |
    Linstor REST API V1

    The V1 rest api of Linstor should stay compatible and only additions are made to the API,
    If there are breaking changes or redesigned a new major REST API version will be issued.

    Server runs per default on port `3370` on `::` ipv6 and ipv4.

    To change the bind address or port you can use the following linstor client commands:
    ```
    linstor controller set-property REST/bindAddress 127.0.0.1
    linstor controller set-property REST/port 8080
    ```

    After setting this properties restart the controller and the new values should be used.

    Changelog:

    * 1.0.12
      - Added WritecacheResource and WritecacheVolume schemas.
      - Removed support for swordfish
      - Added `with_storage_pool` to PhysicalStorageCreate post request, allowing to create linstor storage pools too
    * 1.0.11
      - Added /v1/physical-storage endpoint, that lets you query and create lvm/zfs pools
      - Extended Node with list of supported providers and layers as well as lists of reasons for
        unsupported providers and layers
    * 1.0.10
      - Added `reports` array field to Volume object, contains ApiCallRcs for problems
      - Changed `ResourceDefinitions` can now include `VolumeDefinitions` in `volume_definitions` field
      - Added various filter query parameters
    * 1.0.9
      - Added supports_snapshots to StoragePool
    * 1.0.8
      - Added /v1/resource-groups
      - Added /v1/resource-groups/{rscgrp}/volume-groups
      - Moved AutoSelectFilter::place_count default indirectly to create resource implementation
      - Added diskless_on_remaining to AutoSelectFilter
      - Changed /v1/view/resources return type to ResourceWithVolumes
        ResourceWithVolumes is now a child type of Resource (removed volumes from Resource)
    * 1.0.7
      - Added ext_meta_stor_pool to DrbdVolume
      - Added is_active field to the NetInterface type
    * 1.0.6
      - Added /v1/resource-definitions/{rscName}/resources/{nodeName}/volumes/{vlmnr} PUT
    * 1.0.5
      - Added `reports` field to StoragePool object
    * 1.0.4
      - Added /v1/view/storage-pools overview path
      - Added uuid fields for objects
    * 1.0.3
      - Added /v1/view/resources overview path
      - documentation schema extraction
    * 1.0.2
      - Added /v1/storage-pool-definitions object path
      - added NVME layer object type
    * 1.0.1
      - Documentation review and updates
      - no functional changes
    * 1.0.0
      - Initial REST API v1
  version: 1.0.12
  title: Linstor REST API
  contact:
    email: rene.peinthor@linbit.com
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.html
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /v1/storage-pool-definitions:
    get:
      tags:
        - developers
      summary: Lists storage pool definitions
      operationId: storagePoolDfnList
      description: Returns an array of all storage pool definitions
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all storage pool definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePoolDefinition'
    post:
      tags:
        - developers
      summary: add a storage pool definition to Linstor
      operationId: storagePoolDfnAdd
      description: |
        Adds a storage pool definition to Linstor
      responses:
        '201':
          description: storage pool definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinition'
            example:
              storage_pool_name: ssd_pool
        description: Storage pool definition to add
  /v1/storage-pool-definitions/{storagepool}:
    parameters:
      - name: storagepool
        in: path
        required: true
        schema:
          type: string
          description: Storage pool definition to use
    get:
      tags:
        - developers
      summary: Lists a specific storage pool definition
      operationId: storagePoolDfnGet
      description: Returns a specific storage pool definition
      responses:
        '200':
          description: Specified storage pool definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePoolDefinition'
    put:
      tags:
        - developers
      summary: modify a storage pool definition
      operationId: storPoolDfnModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `MaxOversubscriptionRatio` - range[`1-1000`]
      responses:
        '200':
          description: storage pool definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinitionModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a storage pool definition
      operationId: storagePoolDefinitionDelete
      description: Delete a storage pool definition from Linstor
      responses:
        '200':
          description: storage pool definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes:
    get:
      tags:
        - developers
      summary: Lists nodes registered to the controller
      operationId: nodeList
      description: |
        Returns an array of all nodes registered to Linstor.
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all node objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
        '400':
          $ref: '#/components/responses/InvalidInput'
    post:
      tags:
        - developers
      summary: add a node to Linstor
      operationId: nodeAdd
      description: |
        Adds a node to Linstor

        If only one net-interface is specified and it is does not specify
        a `satellite_port` it will apply the default port and `satellite_encryption_type`
        for this net-interface.
      responses:
        '201':
          description: node created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
            example:
              name: nodeA
              type: SATELLITE
              net_interfaces:
                - name: default
                  address: 10.0.0.2
                  satellite_port: 3366
                  satellite_encryption_type: Plain
                  is_active: true
        description: Node to add to Linstor
  /v1/nodes/{node}:
    parameters:
      - $ref: '#/components/parameters/Node'
    put:
      tags:
        - developers
      summary: modify a node
      operationId: nodeModify
      description: |+
        Sets or modifies properties

        Possible properties are:
        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `DrbdMetaType` - enum
            * external
            * internal

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Blocksize` - long

            4096 is recommended; the maximum block size is the page size

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

      responses:
        '200':
          description: node modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a node
      operationId: nodeDelete
      description: Delete a node from Linstor
      responses:
        '200':
          description: node deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes/{node}/lost:
    parameters:
      - $ref: '#/components/parameters/Node'
    delete:
      tags:
        - developers
      summary: delete an unrecoverable node
      operationId: nodeLost
      description: Delete an unrecoverable node
      responses:
        '200':
          description: node deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes/{node}/reconnect:
    parameters:
      - $ref: '#/components/parameters/Node'
    put:
      tags:
        - developers
      summary: reconnect a node to the controller
      operationId: nodeReconnect
      description: Reconnect a node to the controller
      responses:
        '200':
          description: node put into reconnect cycle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes/{node}/net-interfaces:
    parameters:
      - $ref: '#/components/parameters/Node'
    get:
      tags:
        - developers
      summary: return the list of net-interfaces
      operationId: netinterfaceList
      description: Returns the list of netinterfaces for this node
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of net-interfaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetInterface'
        '500':
          $ref: '#/components/responses/OperationFailed'
    post:
      tags:
        - developers
      summary: create a netinterface on a node
      operationId: netinterfaceCreate
      description: |
        Create a netinterface on a node

        If satellite_port and satellite_encryption_type are given
        the netinterface can also work as connection to the controller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetInterface'
      responses:
        '201':
          description: netinterface created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes/{node}/net-interfaces/{netinterface}:
    parameters:
      - $ref: '#/components/parameters/Node'
      - $ref: '#/components/parameters/NetInterface'
    put:
      tags:
        - developers
      summary: modify a netinterface from a node
      operationId: netinterfaceModified
      description: Modify a netinterface from a node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetInterface'
      responses:
        '200':
          description: netinterface modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
    delete:
      tags:
        - developers
      summary: delete a netinterface from a node
      operationId: netinterfaceDelete
      description: Delete a netinterface from a node
      responses:
        '200':
          description: netinterface deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/nodes/{node}/storage-pools:
    parameters:
      - $ref: '#/components/parameters/Node'
    get:
      tags:
        - developers
      summary: lists all storage pools for a node
      operationId: nodeStoragePoolList
      description: Lists all storage pools of a node
      parameters:
        - name: nodes
          in: query
          description: Filter only for the specified nodes, if not specified no filtering.
          schema:
            type: array
            items:
              type: string
        - name: storage_pools
          in: query
          description: Filter only for the specified storage pools, if not specified
            no filtering.
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array list of all storage pools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePool'
    post:
      tags:
        - developers
      summary: creates a new storage pool on this node
      operationId: nodeStoragePoolCreate
      description: |
        Creates a new storage pool on this node.

        `provider_kind` has to be specified and additional to that
        the linked `StorDriver` property that has the value to the backing pool:

          * `LVM`: `StorDriver/LvmVg`
          * `LVM_THIN`: `StorDriver/LvmVg` and `StorDriver/ThinPool`
          * `ZFS`: `StorDriver/ZPool`
          * `ZFS_THIN`: `StorDriver/ZPoolThin`
          * `DISKLESS`: Does not need a property as it has no backing pool
      responses:
        '201':
          description: storage pool created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePool'
            example:
              storage_pool_name: DfltStorPool
              provider_kind: LVM_THIN
              props:
                StorDriver/LvmVg: mylvmpool
                StorDriver/ThinPool: thin
  /v1/nodes/{node}/storage-pools/{storagepool}:
    parameters:
      - $ref: '#/components/parameters/Node'
      - name: storagepool
        in: path
        required: true
        schema:
          type: string
          description: Storage pool to use
    put:
      tags:
        - developers
      summary: modify a storage pool
      operationId: nodeStoragePoolModify
      description: |+
        Sets or modifies properties

        Possible properties are:
        - `StorDriver/LvmVg` - regex[`[a-zA-Z0-9_-]+`]
        - `StorDriver/ThinPool` - regex[`[a-zA-Z0-9_-]+`]
        - `StorDriver/ZPool` - regex[`[a-zA-Z0-9_/-]+`]
        - `StorDriver/ZPoolThin` - regex[`[a-zA-Z0-9_/-]+`]
        - `StorDriver/FileDir` - regex[`.*`]
        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `StorDriver/WaitTimeoutAfterCreate` - regex[`[0-9]+`]
        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

      responses:
        '200':
          description: storage pool modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePoolDefinitionModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a storage pool
      operationId: nodeStoragePoolDelete
      description: Delete a storage pool
      responses:
        '200':
          description: storage pool deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions:
    get:
      tags:
        - developers
      summary: lists all resource-definitions
      operationId: resourceDefinitionList
      description: |
        Lists all resource definitions.

        A single resource definition can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1
      parameters:
        - name: resource_definitions
          in: query
          description: Filter only for the specified resource definitions, if not
            specified no filtering.
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all resource-definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceDefinition'
    post:
      tags:
        - developers
      summary: add a resource-definition
      operationId: resourceDefinitionCreate
      description: |
        Adds a resource-definition.

        Only required property is the name of the resource definition.
        All other properties are optional.
      responses:
        '201':
          description: resource-definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDefinitionCreate'
            example:
              resource_definition:
                name: rsc1
  /v1/resource-definitions/{resource}:
    parameters:
      - $ref: '#/components/parameters/Resource'
    put:
      tags:
        - developers
      summary: modify a resource-definition
      operationId: resourceDefinitionModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `DrbdMetaType` - enum
            * external
            * internal

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `DrbdProxy/CompressionType` - enum
            * zlib
            * lzma
            * lz4
            * zstd

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/enabled` - enum
            * rdma
            * tcp

        - `NVMe/enabled` - range[`1-65535`]
        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `DrbdOptions/auto-quorum` - enum

            Enables automatic setting of the 'quroum' and 'on-no-quroum' property

            * io-error
            * suspend-io
            * disabled

        - `DrbdOptions/auto-add-quorum-tiebreaker` - boolean_true_false

            Enables automatic management (creation and deletion) of tie breaking resource

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Blocksize` - long

            4096 is recommended; the maximum block size is the page size

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently

        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      responses:
        '200':
          description: resource-definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDefinitionModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a resource-definition
      operationId: resourceDefinitionDelete
      description: Delete a resource-definition
      responses:
        '200':
          description: resource-definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/volume-definitions:
    parameters:
      - $ref: '#/components/parameters/Resource'
    get:
      tags:
        - developers
      summary: lists all volume-definitions
      operationId: volumeDefinitionList
      description: |
        Lists all volume definitions.

        A single volume definition can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1/volume-definitions/0
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all volume-definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeDefinition'
    post:
      tags:
        - developers
      summary: add a volume-definition to a resource
      operationId: volumeDefinitionCreate
      description: |
        Adds a volume-definition.

        Required properties is only `size`, all other will be auto generated if not given.
      responses:
        '201':
          description: volume-definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeDefinitionCreate'
            example:
              volume_definition:
                size_kib: 262144
  /v1/resource-definitions/{resource}/volume-definitions/{volume_number}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/VolumeNumber'
    put:
      tags:
        - developers
      summary: modify a volume-definition
      operationId: volumeDefinitionModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `DrbdMetaType` - enum
            * external
            * internal

        - `OverrideVlmId` - regex[`.*`]

            Overwrites the generated '<resource-name>_<5 digit volume number>' volume name for migration purposes

        - `AllowLargerVolumeSize` - boolean_true_false

            Do not fail when the underlying volume is larger than expected

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `DrbdCurrentGi` - regex[`[a-fA-F0-9]{16}`]
        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Blocksize` - long

            4096 is recommended; the maximum block size is the page size

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
      responses:
        '200':
          description: volume-definition modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeDefinitionModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a volume-definition
      operationId: volumeDefinitionDelete
      description: Delete a volume-definition
      responses:
        '200':
          description: volume-definition deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources:
    parameters:
      - $ref: '#/components/parameters/Resource'
    get:
      tags:
        - developers
      summary: lists all resources for a resource-definition
      operationId: resourceList
      description: |
        Lists all resources for a resource-definition.

        A single resource can be queried by adding its name
        to the resource string like:

        /v1/resource-definitions/rsc1/resources/nodeA
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all resources for the resource-definition
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
    post:
      tags:
        - developers
      summary: create one or more resources.
      operationId: resourceCreate
      description: |
        Adds one or more resource(s).

      responses:
        '201':
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResourceCreate'
            example:
              - resource:
                  name: rsc1
                  node_name: alpha
  /v1/resource-definitions/{resource}/resources/{node}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
    post:
      tags:
        - developers
      summary: create a resource on a node
      operationId: resourceCreateOnNode
      description: |
        Adds a resource on a node.

        To use a specific storage pool add the `StorPoolName` property
        and use the storage pool name as value.
        If the `StorPoolName` property is not set, the `DfltStorPool` will be used.

        To create a diskless resource you have to set the "DISKLESS" flag in the flags list.
        ```
        {
          "resource": {
            "flags": ["DISKLESS"]
          }
        }
        ```
      responses:
        '201':
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
            example: {}
    put:
      tags:
        - developers
      summary: modify a resource
      operationId: resourceModify
      description: |+
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `StorPoolNameDrbdMeta` - regex[`^|.internal|[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `DrbdMetaType` - enum
            * external
            * internal

        - `PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `PeerSlots` - range[`1-31`]

            DRBD peer slots present on resource

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

      responses:
        '200':
          description: resource modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a resource
      operationId: resourceDelete
      description: Delete a resource on a node
      responses:
        '200':
          description: resource deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-definitions/{resource}/resources/{node}/volumes:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
    get:
      tags:
        - developers
      summary: lists all volumes of a resources
      operationId: resourceVolumeList
      description: |
        Lists all volumes for a resource-definition.

        A single volume can be queried by adding its volume number
        to the resource string like:

        /v1/resource-definitions/rsc1/resources/nodeA/volumes/0
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all volume for the resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'

  /v1/resource-definitions/{resource}/resources/{node}/volumes/{volume_number}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
      - $ref: '#/components/parameters/VolumeNumber'
    put:
      tags:
        - developers
      summary: modify a volume
      operationId: volumeModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `sys/fs/blkio_throttle_read` - number
        - `sys/fs/blkio_throttle_write` - number
      responses:
        '200':
          description: volume modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop

  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskless:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
    put:
      tags:
        - developers
      summary: toggle a resource to diskless
      operationId: resourceToggleDiskless
      description: toggle a resource to a diskless resource

      responses:
        '200':
          description: resource toggled to diskless
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskless/{disklesspool}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
      - name: disklesspool
        in: path
        required: true
        schema:
          type: string
          description: diskless pool to use.
    put:
      tags:
        - developers
      summary: toggle a resource to diskless resource
      operationId: resourceToggleDisklessDisklesspool
      description: |
        toggle a resource to a diskless.

      responses:
        '200':
          description: resource toggled to diskless resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskful:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
    put:
      tags:
        - developers
      summary: toggle a resource to a diskful resource
      operationId: resourceToggleDiskful
      description: |
        toggle a resource to a diskful resource using the default storage pool

      responses:
        '200':
          description: resource toggled to diskful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/resources/{node}/toggle-disk/diskful/{storagepool}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
      - name: storagepool
        in: path
        required: true
        schema:
          type: string
          description: storage pool to use.
    put:
      tags:
        - developers
      summary: toggle a resource to a diskful resource
      operationId: resourceToggleDiskfulStoragepool
      description: toggle a resource to a diskful resource

      responses:
        '200':
          description: resource toggled to diskful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/resources/{node}/migrate-disk/{fromnode}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
      - name: fromnode
        in: path
        required: true
        schema:
          type: string
          description: node that should be deleted after the successful migrate
    put:
      tags:
        - developers
      summary: migrate a resource to another node
      operationId: resourceMigrateDisk
      description: |
        migrate a resource to another node without reducing the redundancy count

      responses:
        '200':
          description: resource migrated to another node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/resources/{node}/migrate-disk/{fromnode}/{storagepool}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/Node'
      - name: fromnode
        in: path
        required: true
        schema:
          type: string
          description: node that should be deleted after the successful migrate
      - name: storagepool
        in: path
        required: true
        schema:
          type: string
          description: storage pool to use.
    put:
      tags:
        - developers
      summary: migrate a resource to another node
      operationId: resourceMigrateDiskStoragepool
      description: |
        migrate a resource to another node without reducing the redundency count

      responses:
        '200':
          description: resource migrated to another node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/autoplace:
    parameters:
      - $ref: '#/components/parameters/Resource'
    post:
      tags:
        - developers
      summary: autoplace resource
      operationId: resourceAutoplace
      description: |
        Auto place the resource on the specified place_count redundency.
        If place_count isn't given 2 is the default.

      responses:
        '201':
          description: resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoPlaceRequest'
            example:
              select_filter:
                place_count: 2

  /v1/resource-definitions/{resource}/resource-connections:
    parameters:
      - $ref: '#/components/parameters/Resource'
    get:
      tags:
        - developers
      operationId: resourceConnectionsList
      summary: list all resource connections for resource
      description: List all resource connections for resource
      responses:
        '200':
          description: list of resource connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceConnection'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/resource-connections/{node_a}/{node_b}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/NodeA'
      - $ref: '#/components/parameters/NodeB'
    get:
      tags:
        - developers
      operationId: resourceConnectionList
      summary: show the specified resource connection
      description: show the specified resource connection
      responses:
        '200':
          description: list of resource connections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceConnection'
        '404':
          $ref: '#/components/responses/ObjectNotFound'
        '500':
          $ref: '#/components/responses/OperationFailed'
    put:
      tags:
        - developers
      operationId: resourceConnectionModify
      summary: modify a resource connection
      description: |+
        Sets or modifies properties

        Possible properties are:
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently

        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

      responses:
        '200':
          description: resource connection modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '404':
          $ref: '#/components/responses/ObjectNotFound'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceConnectionModify'

  /v1/resource-definitions/{resource}/snapshots:
    parameters:
      - $ref: '#/components/parameters/Resource'
    get:
      tags:
        - developers
      summary: list snapshots
      description: List snapshots for a resource
      operationId: resourceSnapshotsList
      responses:
        '200':
          description: Snapshots for the resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Snapshot'
    post:
      tags:
        - developers
      summary: create a snapshot
      description: Create a snapshot for a resource
      operationId: resourceSnapshotCreate
      responses:
        '201':
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
            example:
              name: snap1
  /v1/resource-definitions/{resource}/snapshots/{snapshot}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - name: snapshot
        in: path
        required: true
        schema:
          type: string
          description: Snapshot name to use
    get:
      tags:
        - developers
      summary: list a specific snapshot
      description: List the given snapshot for a resource
      operationId: resourceSnapshotList
      responses:
        '200':
          description: Snapshot for the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
    delete:
      tags:
        - developers
      summary: delete a snapshot
      description: Delete a snapshot
      operationId: resourceSnapshotDelete
      responses:
        '200':
          description: Snapshot deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/snapshot-restore-resource/{snapshot}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - name: snapshot
        in: path
        required: true
        description: Snapshot name to use
        schema:
          type: string
    post:
      tags:
        - developers
      summary: restore a snapshot
      description: Restore a snapshot to a new resource
      operationId: resourceSnapshotRestore
      responses:
        '200':
          description: Snapshot restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestore'
  /v1/resource-definitions/{resource}/snapshot-restore-volume-definition/{snapshot}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - name: snapshot
        in: path
        required: true
        description: Snapshot name to use
        schema:
          type: string
    post:
      tags:
        - developers
      summary: restore a snapshot volume definition
      description: Restore a snapshot volume definition to a new resource
      operationId: resourceSnapshotsRestoreVolumeDefinition
      responses:
        '200':
          description: Snapshot restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotRestore'
  /v1/resource-definitions/{resource}/snapshot-rollback/{snapshot}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - name: snapshot
        in: path
        required: true
        description: Snapshot name to use
        schema:
          type: string
    post:
      tags:
        - developers
      summary: rollback a snapshot
      description: Rollback a resource to the snapshot state
      operationId: resourceSnapshotRollback
      responses:
        '200':
          description: Snapshot rollbacked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-groups:
    get:
      tags:
        - developers
      summary: lists all resource-groups
      operationId: resourceGroupList
      description: |
        Lists all resource groups.

        A single resource group can be queried by adding its name
        to the resource string like:

        /v1/resource-groups/rscgrp1
      parameters:
        - name: resource_groups
          in: query
          description: Filter only for the specified resource groups, if not specified
            no filtering.
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all resource-groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroup'
    post:
      tags:
        - developers
      summary: add a resource-group
      operationId: resourceGroupCreate
      description: |
        Adds a resource-group.

        Only required property is the name of the resource group.
        All other properties are optional.
      responses:
        '201':
          description: resource-group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroup'
            example:
              resource_group:
                name: rscgrp1
  /v1/resource-groups/{resource_group}:
    parameters:
      - $ref: '#/components/parameters/ResourceGroupName'
    put:
      tags:
        - developers
      summary: modify a resource-group
      operationId: resourceGroupModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `DrbdProxy/CompressionType` - enum
            * zlib
            * lzma
            * lz4

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `NVMe/enabled` - enum
            * rdma
            * tcp

        - `NVMe/enabled` - range[`1-65535`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently

        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      responses:
        '200':
          description: resource-group modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a resource-group
      operationId: resourceGroupDelete
      description: Delete a resource-group
      responses:
        '200':
          description: resource-group deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/resource-groups/{resource_group}/spawn:
    parameters:
      - $ref: '#/components/parameters/ResourceGroupName'
    post:
      tags:
        - developers
      summary: create a new resource-definition based on the given resource-group
      operationId: resourceGroupSpawn
      description: |
        Creates a new resource-definition and auto-deploys if configured to do so.
      responses:
        '201':
          description: resource-definition created and auto-deployed if configured
            accordingly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupSpawn'
            example:
              resource_definition_name: res1
              volume_sizes:
                - 1048576
                - 20971520
  /v1/resource-groups/{resource_group}/volume-groups:
    parameters:
      - $ref: '#/components/parameters/ResourceGroupName'
    get:
      tags:
        - developers
      summary: lists all volume-groups
      operationId: volumeGroupList
      description: |
        Lists all volume groups.

        A single volume group can be queried by adding its name
        to the resource string like:

        /v1/resource-groups/rscgrp1/volume-groups/0
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Array of all volume-groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeGroup'
    post:
      tags:
        - developers
      summary: add a volume-group to a resource-group
      operationId: volumeGroupCreate
      description: |
        Adds a volume-group.
      responses:
        '201':
          description: volume-group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroup'
  /v1/resource-groups/{resource_group}/volume-groups/{volume_number}:
    parameters:
      - $ref: '#/components/parameters/ResourceGroupName'
      - $ref: '#/components/parameters/VolumeNumber'
    put:
      tags:
        - developers
      summary: modify a resource-group
      operationId: volumeGroupModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `StorPoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name to use.

        - `OverrideVlmId` - regex[`.*`]

            Overwrites the generated '<resource-name>_<5 digit volume number>' volume name for migration purposes

        - `AllowLargerVolumeSize` - boolean_true_false

            Do not fail when the underlying volume is larger than expected

        - `FileSystem/Type` - enum

            File system type to use

            * ext4
            * xfs

        - `FileSystem/MkfsParams` - string

            Additional parameters for the mkfs command

        - `StorDriver/LvcreateType` - enum
            * linear
            * striped
            * mirror
            * raid0
            * raid1
            * raid4
            * raid5
            * raid6
            * raid10
            * lzma
            * lz4

        - `DrbdCurrentGi` - regex[`[a-fA-F0-9]{16}`]
        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
      responses:
        '200':
          description: volume-group modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeGroupModify'
            example:
              override_props:
                Aux/testprop: '1'
              delete_props:
                - Aux/deleteprop
    delete:
      tags:
        - developers
      summary: delete a volume-group
      operationId: volumeGroupDelete
      description: Delete a volume-group
      responses:
        '200':
          description: volume-group deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
  /v1/controller/properties:
    get:
      tags:
        - developers
      summary: lists all controller properties
      operationId: controllerPropertyList
      description: |
        Lists all controller properties.
      responses:
        '200':
          description: A string to string map with all properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Properties'
    post:
      tags:
        - developers
      summary: sets or modifies controller properties
      operationId: controllerPropertyModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `TcpPortAutoRange` - regex[`[0-9]+-[0-9]+`]

            Range for auto-allocation of resource TCP ports

        - `MinorNrAutoRange` - regex[`[0-9]+-[0-9]+`]

            Range for auto-allocation of volume minor numbers

        - `PeerSlotsNewResource` - range[`1-31`]

            DRBD peer slots to allocate for newly created resources (default 7), the number of peer slots cannot be changed once the resource is created, so allow sufficient slots to increase redundancy in the future

        - `StorDriver/DMStats` - boolean_true_false

            Enable dmstats on lvm create

        - `GlobSeqApiCalls` - boolean_true_false

            Globally sequentialize all ctrl -> stlt api calls

        - `REST/bindAddress` - string

            Bind address of the REST API

        - `REST/port` - range[`1-65535`]

            TCP Port of the REST API

        - `REST/enabled` - boolean_true_false

            Bool if REST API should be enabled

        - `NVMe/enabled` - enum
            * rdma
            * tcp

        - `NVMe/enabled` - range[`1-65535`]
        - `NVMe/PrefNic` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Preferred network interface to use

        - `StorDriver/WaitTimeoutAfterCreate` - regex[`[0-9]+`]
        - `sys/fs/blkio_throttle_read` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.read_bps_device

        - `sys/fs/blkio_throttle_write` - long

            Sets the /sys/fs/cgroup/blkio/blkio.throttle.write_bps_device

        - `SearchDomain` - string

            Search domain node names, if no FQDN is given.

        - `ExtCmdWaitTimeout` - long

            Wait timeout for an external command in milliseconds

        - `DrbdOptions/auto-quorum` - enum

            Enables automatic setting of the 'quroum' and 'on-no-quroum' property

            * io-error
            * suspend-io
            * disabled

        - `DrbdOptions/auto-add-quorum-tiebreaker` - boolean_true_false

            Enables automatic management (creation and deletion) of tie breaking resource

        - `Writecache/PoolName` - regex[`^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,47}$`]

            Linstor storage pool name for writecache

        - `Writecache/Size` - regex[`^100%|[0-9]{1,2}([.][0-9]*)?%|[1-9][0-9]{2,}$`]

            Size of the writecache in % (0-100) or KiB otherwise

        - `Writecache/Blocksize` - long

            4096 is recommended; the maximum block size is the page size

        - `Writecache/Options/StartSector` - long

            offset from the start of cache device in 512-byte sectors

        - `Writecache/Options/HighWatermark` - long

            start writeback when the number of used blocks reach this watermark

        - `Writecache/Options/LowWatermark` - long

            stop writeback when the number of used blocks drops below this watermark

        - `Writecache/Options/WritebackJobs` - long

            limit the number of blocks that are in flight during writeback. Setting this value reduces writeback throughput, but it may improve latency of read requests

        - `Writecache/Options/AutocommitBlocks` - long

            when the application writes this amount of blocks without issuing the FLUSH request, the blocks are automatically commited

        - `Writecache/Options/AutocommitTime` - long

            autocommit time in milliseconds. The data is automatically commited if this time passes and no FLUSH request is received

        - `Writecache/Options/Fua` - enum

            "On" results in "fua" as argument, whereas the value "Off" results in "nofua" argument

            * On
            * Off

        - `Writecache/Options/Additional` - string

            Additional arguments passed through

        - `DrbdOptions/Disk/read-balancing` - enum
            * prefer-local
            * prefer-remote
            * round-robin
            * least-pending
            * when-congested-remote
            * 32K-striping
            * 64K-striping
            * 128K-striping
            * 256K-striping
            * 512K-striping
            * 1M-striping

        - `DrbdOptions/Disk/on-io-error` - enum
            * pass_on
            * call-local-io-error
            * detach

        - `DrbdOptions/Disk/disk-drain` - boolean
        - `DrbdOptions/Disk/resync-after` - string
        - `DrbdOptions/Disk/disk-timeout` - range[`0-6000`]
        - `DrbdOptions/Disk/disable-write-same` - boolean
        - `DrbdOptions/Disk/rs-discard-granularity` - range[`0-1048576`]
        - `DrbdOptions/Disk/disk-flushes` - boolean
        - `DrbdOptions/Disk/al-extents` - range[`67-65534`]
        - `DrbdOptions/Disk/al-updates` - boolean
        - `DrbdOptions/Disk/md-flushes` - boolean
        - `DrbdOptions/Disk/disk-barrier` - boolean
        - `DrbdOptions/Disk/discard-zeroes-if-aligned` - boolean
        - `DrbdOptions/PeerDevice/c-fill-target` - range[`0-1048576`]
        - `DrbdOptions/PeerDevice/c-max-rate` - range[`250-4194304`]
        - `DrbdOptions/PeerDevice/resync-rate` - range[`1-8388608`]
        - `DrbdOptions/PeerDevice/c-delay-target` - range[`1-100`]
        - `DrbdOptions/PeerDevice/c-min-rate` - range[`0-4194304`]
        - `DrbdOptions/PeerDevice/bitmap` - boolean
        - `DrbdOptions/PeerDevice/c-plan-ahead` - range[`0-300`]
        - `DrbdOptions/Resource/peer-ack-delay` - range[`1-10000`]
        - `DrbdOptions/Resource/quorum-minimum-redundancy` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/max-io-depth` - range[`4-4294967295`]
        - `DrbdOptions/Resource/auto-promote-timeout` - range[`0-600`]
        - `DrbdOptions/Resource/quorum` - enum [`1-32`]
            * off
            * majority
            * all

        - `DrbdOptions/Resource/on-no-data-accessible` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Resource/auto-promote` - boolean
        - `DrbdOptions/Resource/cpu-mask` - string
        - `DrbdOptions/Resource/twopc-timeout` - range[`50-600`]
        - `DrbdOptions/Resource/twopc-retry-timeout` - range[`1-50`]
        - `DrbdOptions/Resource/peer-ack-window` - range[`2048-204800`]
        - `DrbdOptions/Resource/on-no-quorum` - enum
            * io-error
            * suspend-io

        - `DrbdOptions/Net/max-epoch-size` - range[`1-20000`]
        - `DrbdOptions/Net/protocol` - enum
            * A
            * B
            * C

        - `DrbdOptions/Net/allow-two-primaries` - boolean
        - `DrbdOptions/Net/after-sb-0pri` - enum
            * disconnect
            * discard-younger-primary
            * discard-older-primary
            * discard-zero-changes
            * discard-least-changes
            * discard-local
            * discard-remote

        - `DrbdOptions/Net/ko-count` - range[`0-200`]
        - `DrbdOptions/Net/data-integrity-alg` - string
        - `DrbdOptions/Net/ping-timeout` - range[`1-300`]
        - `DrbdOptions/Net/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/transport` - string
        - `DrbdOptions/Net/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Net/max-buffers` - range[`32-131072`]
        - `DrbdOptions/Net/fencing` - enum
            * dont-care
            * resource-only
            * resource-and-stonith

        - `DrbdOptions/Net/csums-alg` - string
        - `DrbdOptions/Net/always-asbp` - boolean
        - `DrbdOptions/Net/congestion-extents` - range[`67-65534`]
        - `DrbdOptions/Net/on-congestion` - enum
            * block
            * pull-ahead
            * disconnect

        - `DrbdOptions/Net/ping-int` - range[`1-120`]
        - `DrbdOptions/Net/rr-conflict` - enum
            * disconnect
            * call-pri-lost
            * violently

        - `DrbdOptions/Net/tcp-cork` - boolean
        - `DrbdOptions/Net/use-rle` - boolean
        - `DrbdOptions/Net/csums-after-crash-only` - boolean
        - `DrbdOptions/Net/socket-check-timeout` - range[`0-300`]
        - `DrbdOptions/Net/congestion-fill` - range[`0-20971520`]
        - `DrbdOptions/Net/cram-hmac-alg` - string
        - `DrbdOptions/Net/verify-alg` - string
        - `DrbdOptions/Net/shared-secret` - string
        - `DrbdOptions/Net/connect-int` - range[`1-120`]
        - `DrbdOptions/Net/timeout` - range[`1-600`]
        - `DrbdOptions/Net/after-sb-2pri` - enum
            * disconnect
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Net/after-sb-1pri` - enum
            * disconnect
            * consensus
            * discard-secondary
            * call-pri-lost-after-sb
            * violently-as0p

        - `DrbdOptions/Handlers/after-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-target` - string
        - `DrbdOptions/Handlers/before-resync-source` - string
        - `DrbdOptions/Handlers/out-of-sync` - string
        - `DrbdOptions/Handlers/quorum-lost` - string
        - `DrbdOptions/Handlers/fence-peer` - string
        - `DrbdOptions/Handlers/unfence-peer` - string
        - `DrbdOptions/Handlers/initial-split-brain` - string
        - `DrbdOptions/Handlers/local-io-error` - string
        - `DrbdOptions/Handlers/pri-lost` - string
        - `DrbdOptions/Handlers/pri-lost-after-sb` - string
        - `DrbdOptions/Handlers/pri-on-incon-degr` - string
        - `DrbdOptions/Handlers/split-brain` - string
      responses:
        '201':
          description: Controller property created/modifed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllerPropsModify'
            example:
              override_props:
                Aux/testprop: myprop
  /v1/controller/properties/{key}:
    parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
          description: Controller property key to delete
    delete:
      tags:
        - developers
      summary: Deletes a controller property
      operationId: controllerPropertyDelete
      description: Delete a controller property
      responses:
        '200':
          description: property deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/controller/version:
    get:
      tags:
        - developers
      summary: show controller version info
      operationId: controllerVersion
      description: |
        Show Controller version info

      responses:
        '200':
          description: Controller version info object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerVersion'
  /v1/resource-definitions/{resource}/drbd-proxy:
    parameters:
      - $ref: '#/components/parameters/Resource'
    put:
      tags:
        - developers
      summary: modify drbd proxy option properties
      operationId: resourceDrbdProxyModify
      description: |
        Sets or modifies properties

        Possible properties are:
        - `DrbdOptions/Proxy/memlimit` - range[`16777216-9223372036854775807`]
        - `DrbdOptions/Proxy/read-loops` - range[`0-2147483647`]
        - `DrbdOptions/Proxy/sndbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Proxy/rcvbuf-size` - range[`0-10485760`]
        - `DrbdOptions/Proxy/ping-timeout` - range[`1-300`]
        - `DrbdOptions/ProxyCompression/dict-size` - range[`4096-1610612736`]
        - `DrbdOptions/ProxyCompression/lc` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/lp` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/pb` - range[`0-4`]
        - `DrbdOptions/ProxyCompression/nice-len` - range[`0-273`]
        - `DrbdOptions/ProxyCompression/mf` - enum
            * hc4
            * hc3
            * bt2
            * bt3
            * bt4

        - `DrbdOptions/ProxyCompression/mode` - enum
            * fast
            * normal

        - `DrbdOptions/ProxyCompression/depth` - range[`0-1000`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-9`]
        - `DrbdOptions/ProxyCompression/contexts` - range[`1-253`]
        - `DrbdOptions/ProxyCompression/fallback-to-zlib` - enum
            * off
            * on

        - `DrbdOptions/ProxyCompression/numa-threshold` - range[`0-253`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-9`]
        - `DrbdOptions/ProxyCompression/level` - range[`1-22`]
      responses:
        '200':
          description: drbd proxy properties modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrbdProxyModify'
            example:
              override_props:
                compression_type: lz4
  /v1/resource-definitions/{resource}/drbd-proxy/enable/{node_a}/{node_b}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - $ref: '#/components/parameters/NodeA'
      - $ref: '#/components/parameters/NodeB'
    post:
      tags:
        - developers
      summary: enable a drbd proxy on a node connection
      operationId: resourceDrbdProxyEnable
      description: Enables a drbd proxy on a node connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrbdProxyEnable'
      responses:
        '200':
          description: drbd proxy configuration enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/resource-definitions/{resource}/drbd-proxy/disable/{nodeA}/{nodeB}:
    parameters:
      - $ref: '#/components/parameters/Resource'
      - name: nodeA
        in: path
        required: true
        schema:
          type: string
          description: source node of the connection
      - name: nodeB
        in: path
        required: true
        schema:
          type: string
          description: target node of the connection
    post:
      tags:
        - developers
      summary: disables a drbd proxy on a node connection
      operationId: resourceDrbdProxyDisable
      description: Disables a drbd proxy on a node connection
      responses:
        '200':
          description: drbd proxy configuration disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/encryption/passphrase:
    post:
      tags:
        - developers
      summary: create a encryption passphrase
      operationId: encryptionPassphraseCreate
      responses:
        '200':
          description: encryption passphrase created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseCreate'
    put:
      tags:
        - developers
      summary: modifies the encryption passphrase
      operationId: encryptionPassphraseModify
      responses:
        '200':
          description: encryption passphrase modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseCreate'
    patch:
      tags:
        - developers
      summary: enter the encryption passphrase
      operationId: encryptionPassphraseEnter
      responses:
        '200':
          description: encryption passphrase accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassPhraseEnter'

  /v1/error-reports:
    get:
      tags:
        - developers
      operationId: errorReportList
      summary: list all error reports
      description: List all error reports
      parameters:
        - name: node
          in: query
          description: Only show error reports of this node
          schema:
            type: string
        - name: since
          in: query
          description: Unix timestamp from the starting interval
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          description: Unix timestamp to the ending interval
          schema:
            type: integer
            format: int64
        - name: withContent
          in: query
          description: Include error report text in response.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: list of error reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Query parameter invalid.
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/error-reports/{reportid}:
    get:
      tags:
        - developers
      operationId: errorReportShow
      summary: query the specified reportid
      description: Query the specified reportid
      parameters:
        - name: reportid
          in: path
          required: true
          description: Error id to select
          schema:
            type: string
        - name: node
          in: query
          description: Only show error reports of this node
          schema:
            type: string
        - name: since
          in: query
          description: Unix timestamp from the starting interval
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          description: Unix timestamp to the ending interval
          schema:
            type: integer
            format: int64
        - name: withContent
          in: query
          description: Include error report text in response.
          schema:
            type: boolean
            default: true
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: list of error reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Query parameter invalid.
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/key-value-store:
    get:
      tags:
        - developers
      operationId: keyValueStoresList
      summary: list all key value stores
      description: List all known key value store instances
      responses:
        '200':
          description: list of key value stores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValueStore'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/key-value-store/{instance}:
    parameters:
      - name: instance
        in: path
        required: true
        schema:
          type: string
          description: name of the key value store
    get:
      tags:
        - developers
      operationId: keyValueStoreList
      summary: list all key value stores
      description: List all known key value store instances
      responses:
        '200':
          description: list of key value stores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValueStore'
        '500':
          $ref: '#/components/responses/OperationFailed'
    put:
      tags:
        - developers
      operationId: keyValueStoreModify
      summary: modify a key value store
      description: Modify a key value store
      responses:
        '200':
          description: key value store modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValueStoreModify'
    delete:
      tags:
        - developers
      operationId: keyValueStoreDelete
      summary: delete a key value store
      description: Delete a key value store
      responses:
        '200':
          description: key value store deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/query-max-volume-size:
    options:
      tags:
        - developers
      operationId: queryMaxVolumeSize
      summary: query the maximum volume size
      description: Query the maximum possible volume size storage pools
      responses:
        '200':
          description: list of usable storage pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxVolumeSizes'
        '500':
          $ref: '#/components/responses/OperationFailed'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSelectFilter'

  /v1/view/resources:
    get:
      tags:
        - developers
      operationId: viewResources
      summary: query all resources with their volumes
      description: This REST-resource should be used if you want to get an overview
        of all resources with their volumes.
      parameters:
        - name: nodes
          in: query
          description: Filter only for the specified nodes, if not specified no filtering.
          schema:
            type: array
            items:
              type: string
        - name: storage_pools
          in: query
          description: Filter only for the specified storage pools, if not specified
            no filtering.
          schema:
            type: array
            items:
              type: string
        - name: resources
          in: query
          description: Filter only for the specified resources, if not specified no
            filtering.
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: resources list with volume data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceWithVolumes'
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/view/storage-pools:
    get:
      tags:
        - developers
      operationId: viewStoragePools
      summary: query all storage pools
      description: This REST-resource should be used if you want to get an overview
        of all storage pools.
      parameters:
        - name: nodes
          in: query
          description: Filter only for the specified nodes, if not specified no filtering.
          schema:
            type: array
            items:
              type: string
        - name: storage_pools
          in: query
          description: Filter only for the specified storage pools, if not specified
            no filtering.
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: storage pool list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoragePool'
        '500':
          $ref: '#/components/responses/OperationFailed'

  /v1/physical-storage:
    get:
      tags:
        - developers
      operationId: viewPhysicaStorage
      summary: show physical storage on nodes, to be used with LINSTOR
      description: Gives a grouped list of physical storage that can be turned into
        a LINSTOR storage-pool
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: physical storage list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalStorage'
        '500':
          $ref: '#/components/responses/OperationFailed'
  /v1/physical-storage/{node}:
    post:
      tags:
        - developers
      operationId: createDevicePool
      summary: creates an LVM, LVM-thin or ZFS pool, optional VDO under it
      description: |
        Creates a LVM/LVM-thin, ZFS pool on the given device and if supported VDO(optional) under it.
        logcal_size_kib parameter is only needed if LVM-thin or vdo is used is used.
        Also note VDO can only used with LVM-fat.
      parameters:
        - $ref: '#/components/parameters/Node'
      responses:
        '201':
          description: device pool created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallRc'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalStorageCreate'
            example:
              provider_kind: LVM_THIN
              device_path: /dev/sde
              pool_name: ssd_fast
              logcal_size_kib: 5368709120
              vdo_enable: false


components:
  parameters:
    Resource:
      name: resource
      in: path
      required: true
      description: resource to use
      schema:
        type: string
    ResourceGroupName:
      name: resource_group
      in: path
      required: true
      description: resource group to use
      schema:
        type: string
    Node:
      name: node
      in: path
      required: true
      description: node to use
      schema:
        type: string
    NetInterface:
      name: netinterface
      in: path
      required: true
      description: netinterface name to use
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: number of records to skip for pagination
      schema:
        type: integer
        format: int32
        minimum: 0
    Limit:
      name: limit
      in: query
      description: maximum number of records to return
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 50
    NodeA:
      name: node_a
      in: path
      required: true
      description: source node of the connection
      schema:
        type: string
    NodeB:
      name: node_b
      in: path
      required: true
      description: target node of the connection
      schema:
        type: string
    VolumeNumber:
      name: volume_number
      in: path
      required: true
      schema:
        type: integer
        format: int32
        description: Volume number of the definition
  responses:
    InvalidInput:
      description: invalid input, or request failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRc'
    ObjectNotFound:
      description: object not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRc'
    OperationFailed:
      description: operation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiCallRc'
  schemas:
    ApiCallRc:
      description: Common api reply structure
      type: object
      required:
        - ret_code
        - message
      properties:
        ret_code:
          type: integer
          format: int64
          description: A masked error number
        message:
          type: string
          example: Operation result.
        cause:
          type: string
          description: Cause of the error
        details:
          type: string
          description: Details to the error message
        correction:
          type: string
          description: Possible correction options
        error_report_ids:
          type: array
          description: List of error report ids related to this api call return code.
          items:
            type: string
        obj_refs:
          type: object
          description: Map of objection that have been involved by the operation.
          additionalProperties:
            type: string
    Node:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
          example: nodeA
        type:
          type: string
          example: Satellite
          enum:
            - Controller
            - Satellite
            - Combined
            - Auxiliary
        flags:
          type: array
          items:
            type: string
        props:
          $ref: '#/components/schemas/Properties'
        net_interfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetInterface'
        connection_status:
          type: string
          example: ONLINE
          description: |
            Enum describing the current connection status.
          enum:
            - OFFLINE
            - CONNECTED
            - ONLINE
            - VERSION_MISMATCH
            - HOSTNAME_MISMATCH
            - FULL_SYNC_FAILED
            - AUTHENTICATION_ERROR
            - UNKNOWN
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        storage_providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderKind'
        resource_layers:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        unsupported_providers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        unsupported_layers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    NodeModify:
      type: object
      properties:
        node_type:
          type: string
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    NetInterface:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
          example: default
        address:
          type: string
          example: 10.0.0.2
        satellite_port:
          type: integer
          example: 3366
        satellite_encryption_type:
          type: string
          example: Plain
          enum:
            - Plain
            - SSL
        is_active:
          description: Defines if this netinterface should be used for the satellite
            connection
          type: boolean
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    Properties:
      type: object
      description: A string to string property map.
      additionalProperties:
        type: string
    ProviderKind:
      type: string
      enum:
        - DISKLESS
        - LVM
        - LVM_THIN
        - ZFS
        - ZFS_THIN
        - FILE
        - FILE_THIN
        - SPDK
    StoragePool:
      description: |
        Contains information about a storage pool.

        If state is `Error` check the storage pool object path for detailed error description:

          /v1/nodes/{nodename}/storage-pools/{poolname}
      type: object
      required:
        - storage_pool_name
        - provider_kind
      properties:
        storage_pool_name:
          type: string
          example: DfltStorPool
        node_name:
          type: string
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        props:
          $ref: '#/components/schemas/Properties'
        static_traits:
          type: object
          readOnly: true
          description: read only map of static storage pool traits
          additionalProperties:
            type: string
        free_capacity:
          type: integer
          format: int64
          example: 882894848
          description: Kibi - read only
        total_capacity:
          type: integer
          format: int64
          example: 1056964608
          description: Kibi - read only
        free_space_mgr_name:
          type: string
          example: drbd1:myfastpool
          description: read only
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        reports:
          type: array
          description: Currently known report messages for this storage pool
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiCallRc'
        supports_snapshots:
          type: boolean
          description: true if the storage pool supports snapshots. false otherwise
    LayerType:
      type: string
      enum:
        - DRBD
        - LUKS
        - STORAGE
        - NVME
    DrbdResourceDefinitionLayer:
      type: object
      properties:
        resource_name_suffix:
          type: string
        peer_slots:
          type: integer
          format: int32
        al_stripes:
          type: integer
          format: int32
        al_stripe_size_kib:
          type: integer
          format: int64
        port:
          type: integer
          format: int32
          example: 7000
          description: used drbd port for this resource
        transport_type:
          type: string
        secret:
          type: string
          example: 7sqCWjvGmwAiV5kzg3VF
          description: drbd resource secret
        down:
          type: boolean
    ResourceDefinitionLayer:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
            - $ref: '#/components/schemas/DrbdResourceDefinitionLayer'
    ResourceDefinition:
      type: object
      properties:
        name:
          type: string
          default: ''
          example: rsc1
        external_name:
          type: string
          description: |
            External name can be used to have native resource names.
            If you need to store a non Linstor compatible resource name use this field
            and Linstor will generate a compatible name.
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_data:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDefinitionLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        resource_group_name:
          type: string
          description: name of the linked resource group, if there is a link
        volume_definitions:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDefinition'
    ResourceDefinitionCreate:
      type: object
      required:
        - resource_definition
      properties:
        drbd_port:
          type: integer
          format: int32
          description: drbd port for resources
        drbd_secret:
          type: string
          example: 7sqCWjvGmwAiV5kzg3VF
          description: drbd resource secret
        drbd_peer_slots:
          type: integer
          format: int32
          description: drbd peer slot number
        drbd_transport_type:
          type: string
          example: IP
        resource_definition:
          $ref: '#/components/schemas/ResourceDefinition'
    ResourceDefinitionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
        drbd_port:
          type: integer
          format: int32
          description: drbd port for resources
        drbd_peer_slots:
          type: integer
          format: int32
          description: drbd peer slot number
        layer_stack:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
    DrbdVolumeDefinition:
      type: object
      properties:
        resource_name_suffix:
          type: string
        volume_number:
          type: integer
          format: int32
        minor_number:
          type: integer
          format: int32
    VolumeDefinitionLayer:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
            - $ref: '#/components/schemas/DrbdVolumeDefinition'
    VolumeDefinition:
      type: object
      required:
        - size_kib
      properties:
        volume_number:
          type: integer
          format: int32
        size_kib:
          type: integer
          format: int64
          description: Size of the volume in Kibi.
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_data:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDefinitionLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    VolumeDefinitionCreate:
      type: object
      required:
        - volume_definition
      properties:
        volume_definition:
          $ref: '#/components/schemas/VolumeDefinition'
        drbd_minor_number:
          type: integer
          format: int32
    VolumeDefinitionModify:
      type: object
      properties:
        size_kib:
          type: integer
          format: int64
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string

    DrbdResource:
      type: object
      properties:
        drbd_resource_definition:
          $ref: '#/components/schemas/DrbdResourceDefinitionLayer'
        node_id:
          type: integer
          format: int32
        peer_slots:
          type: integer
          format: int32
        al_stripes:
          type: integer
          format: int32
        al_size:
          type: integer
          format: int64
        flags:
          type: array
          items:
            type: string
        drbd_volumes:
          type: array
          items:
            $ref: '#/components/schemas/DrbdVolume'
    StorageResource:
      type: object
      properties:
        storage_volumes:
          type: array
          items:
            $ref: '#/components/schemas/StorageVolume'
    LUKSResource:
      type: object
      properties:
        luks_volumes:
          type: array
          items:
            $ref: '#/components/schemas/LUKSVolume'
    NVMEResource:
      type: object
      properties:
        nvme_volumes:
          type: array
          items:
            $ref: '#/components/schemas/NVMEVolume'
    WritecacheResource:
      type: object
      properties:
        writecache_volumes:
          type: array
          items:
            $ref: '#/components/schemas/WritecacheVolume'
    ResourceLayer:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ResourceLayer'
        resource_name_suffix:
          type: string
        type:
          $ref: '#/components/schemas/LayerType'
        drbd:
          $ref: '#/components/schemas/DrbdResource'
        luks:
          $ref: '#/components/schemas/LUKSResource'
        storage:
          $ref: '#/components/schemas/StorageResource'
        nvme:
          $ref: '#/components/schemas/NVMEResource'
        writecache:
          $ref: '#/components/schemas/WritecacheResource'
    ResourceState:
      type: object
      properties:
        in_use:
          type: boolean
    Resource:
      type: object
      properties:
        name:
          type: string
          example: rsc1
        node_name:
          type: string
          example: nodeA
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        layer_object:
          $ref: '#/components/schemas/ResourceLayer'
        state:
          $ref: '#/components/schemas/ResourceState'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    ResourceWithVolumes:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            volumes:
              type: array
              items:
                $ref: '#/components/schemas/Volume'
    ResourceCreate:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
        drbd_node_id:
          type: integer
          format: int32
    ResourceModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    VolumeModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string

    DrbdVolume:
      type: object
      properties:
        drbd_volume_definition:
          $ref: '#/components/schemas/DrbdVolumeDefinition'
        device_path:
          type: string
          description: drbd device path e.g. '/dev/drbd1000'
        backing_device:
          type: string
          description: block device used by drbd
        meta_disk:
          type: string
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
        ext_meta_stor_pool:
          type: string
          description: Storage pool name used for external meta data; null for internal

    LUKSVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        backing_device:
          type: string
          description: block device used by luks
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state
        opened:
          type: boolean

    StorageVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state

    NVMEVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        backing_device:
          type: string
          description: block device used by nvme
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state

    WritecacheVolume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        device_path:
          type: string
          description: block device path
        device_path_cache:
          type: string
          description: block device path used as cache device
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        disk_state:
          type: string
          description: String describing current volume state

    VolumeLayer:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LayerType'
        data:
          oneOf:
            - $ref: '#/components/schemas/DrbdVolume'
            - $ref: '#/components/schemas/LUKSVolume'
            - $ref: '#/components/schemas/StorageVolume'
            - $ref: '#/components/schemas/NVMEVolume'

    Volume:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        storage_pool_name:
          type: string
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        device_path:
          type: string
        allocated_size_kib:
          type: integer
          format: int64
        usable_size_kib:
          type: integer
          format: int64
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/VolumeState'
        layer_data_list:
          type: array
          items:
            $ref: '#/components/schemas/VolumeLayer'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ApiCallRc'
    VolumeState:
      type: object
      properties:
        disk_state:
          type: string
    ResourceGroup:
      type: object
      properties:
        name:
          type: string
          default: ''
          example: rscgrp1
        description:
          type: string
          default: ''
        props:
          $ref: '#/components/schemas/Properties'
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    ResourceGroupModify:
      type: object
      properties:
        description:
          type: string
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
    ResourceGroupSpawn:
      type: object
      properties:
        resource_definition_name:
          type: string
          description: name of the resulting resource-definition
        volume_sizes:
          type: array
          items:
            type: integer
            format: int64
          description: sizes (in kib) of the resulting volume-definitions
        partial:
          type: boolean
          default: false
          description: |
            If false, the length of the vlm_sizes has to match the number of volume-groups or an
            error is returned.

            If true and there are more vlm_sizes than volume-groups, the additional volume-definitions
            will simply have no pre-set properties (i.e. "empty" volume-definitions)
            If true and there are less vlm_sizes than volume-groups, the additional volume-groups
            won't be used.

            If the count of vlm_sizes matches the number of volume-groups, this "partial" parameter
            has no effect.
        definitions_only:
          type: boolean
          default: false
          description: |
            If true, the spawn command will only create the resource-definition with the volume-definitions
            but will not perform an auto-place, even if it is configured.
    VolumeGroup:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        props:
          $ref: '#/components/schemas/Properties'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    VolumeGroupModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    AutoPlaceRequest:
      type: object
      required:
        - select_filter
      properties:
        diskless_on_remaining:
          type: boolean
          default: false
        select_filter:
          $ref: '#/components/schemas/AutoSelectFilter'
        layer_list:
          type: array
          items:
            $ref: '#/components/schemas/LayerType'
    AutoSelectFilter:
      # do not add defaults
      type: object
      required:
        - place_count
      properties:
        place_count:
          type: integer
          format: int32
        storage_pool:
          type: string
        not_place_with_rsc:
          type: array
          items:
            type: string
        not_place_with_rsc_regex:
          type: string
        replicas_on_same:
          type: array
          items:
            type: string
        replicas_on_different:
          type: array
          items:
            type: string
        layer_stack:
          type: array
          items:
            type: string
        provider_list:
          type: array
          items:
            type: string
        diskless_on_remaining:
          type: boolean
    Candidate:
      type: object
      properties:
        storage_pool:
          type: string
          example: DfltStorPool
        max_volume_size_kib:
          type: integer
          format: int64
          description: maximum size in KiB
          example: 3194880
        node_names:
          type: array
          items:
            type: string
        all_thin:
          type: boolean
    MaxVolumeSizes:
      type: object
      properties:
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/Candidate'
        default_max_oversubscription_ratio:
          type: number
          format: double
    ControllerPropsModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    ControllerVersion:
      type: object
      properties:
        version:
          type: string
        git_hash:
          type: string
        build_time:
          type: string
        rest_api_version:
          type: string
    ErrorReport:
      type: object
      example:
        node_name: Controller
        error_time: 1536827504594
        filename: ErrorReport-5B9A15B7-00000-000000.log
      required:
        - error_time
      properties:
        node_name:
          type: string
        error_time:
          type: integer
          format: int64
        filename:
          type: string
          description: |
            Filename of the error report on the server.

            Format is:
            ```ErrorReport-{instanceid}-{nodeid}-{squencenumber}.log```
        text:
          type: string
          description: Contains the full text of the error report file.
    KeyValueStore:
      type: object
      properties:
        name:
          type: string
          description: name of the key value store
        props:
          $ref: '#/components/schemas/Properties'
    KeyValueStoreModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    ResourceConnection:
      type: object
      properties:
        node_a:
          type: string
          description: source node of the connection
        node_b:
          type: string
          description: target node of the connection
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        port:
          type: integer
    ResourceConnectionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    Snapshot:
      type: object
      properties:
        name:
          type: string
        resource_name:
          type: string
        nodes:
          type: array
          items:
            type: string
        props:
          $ref: '#/components/schemas/Properties'
        flags:
          type: array
          items:
            type: string
        volume_definitions:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotVolumeDefinition'
        uuid:
          type: string
          description: unique object id
          example: e8ef8d6b-17bc-42f0-9367-4aae40c78ecb
    SnapshotVolumeDefinition:
      type: object
      properties:
        volume_number:
          type: integer
          format: int32
        size_kib:
          type: integer
          format: int64
          description: Volume size in KiB
    SnapshotRestore:
      type: object
      required:
        - to_resource
      properties:
        to_resource:
          type: string
          description: Resource where to restore the snapshot
          example: rsc2
        nodes:
          type: array
          items:
            type: string
          description: List of nodes where to place the restored snapshot
    PassPhraseCreate:
      type: object
      properties:
        new_passphrase:
          type: string
        old_passphrase:
          type: string
    PassPhraseEnter:
      type: string
    StoragePoolDefinition:
      type: object
      properties:
        storage_pool_name:
          type: string
        props:
          $ref: '#/components/schemas/Properties'
    StoragePoolDefinitionModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        delete_namespaces:
          type: array
          items:
            type: string
    DrbdProxyEnable:
      type: object
      properties:
        port:
          type: integer
          format: int32
          description: Proxy port to use (optional)
    DrbdProxyModify:
      type: object
      properties:
        override_props:
          $ref: '#/components/schemas/Properties'
        delete_props:
          type: array
          items:
            type: string
        compression_type:
          type: string
          description: |
            Compression type used by the proxy.
          enum:
            - none
            - zlib
            - lzma
            - lz4
        compression_props:
          $ref: '#/components/schemas/Properties'
    PhysicalStorage:
      type: object
      properties:
        size:
          type: integer
          format: int64
        rotational:
          type: boolean
        nodes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/PhysicalStorageDevice'
    PhysicalStorageDevice:
      type: object
      properties:
        device:
          type: string
        model:
          type: string
        serial:
          type: string
        wwn:
          type: string
    PhysicalStorageStoragePoolCreate:
      type: object
      description: This structured is used for create physical-storage
      properties:
        name:
          type: string
          description: Name of the linstor storage pool
        props:
            $ref: '#/components/schemas/Properties'
    PhysicalStorageCreate:
      type: object
      required:
        - provider_kind
        - device_paths
      properties:
        provider_kind:
          $ref: '#/components/schemas/ProviderKind'
        device_paths:
          type: array
          items:
            type: string
        raid_level:
          type: string
          description: |
            RAID level to use for pool.
          enum:
            - JBOD
          default: JBOD
        pool_name:
          type: string
        vdo_enable:
          default: false
          type: boolean
        vdo_slab_size_kib:
          type: integer
          format: uint64
          default: 0
        vdo_logical_size_kib:
          type: integer
          format: uint64
          default: 0
        with_storage_pool:
          description: If specified a linstor storage pool will also be created using this device pool
          $ref: '#/components/schemas/PhysicalStorageStoragePoolCreate'
