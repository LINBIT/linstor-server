<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<!--
LINSTOR Project - Configuration of the checkstyle utility for the LINSTOR Coding Standard

Author: Robert Altnoeder <robert.altnoeder@linbit.com>
Version: 2018-02-07_003

Checkstyle: https://checkstyle.sourceforge.net, https://github.com/checkstyle/checkstyle
-->

<module name="Checker">
    <property name="fileExtensions" value="java"/>
    <property name="charset" value="UTF-8"/>

    <!-- Exclude auto-generated protobufs classes -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value=".*[\\/]generated-src[\\/].*$"/>
    </module>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value=".*[\\/]migration[\\/].*[\\/]Migration_.*\.java$"/>
    </module>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="JsonGenTypes\.java$"/>
    </module>

    <!-- Checks whether files end with a new line -->
    <module name="NewlineAtEndOfFile">
        <property name="severity" value="error"/>
    </module>

    <!-- Check that spaces are used for indentation, not tabs -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <property name="severity" value="error"/>
    </module>

    <module name="SuppressWarningsFilter"/>

    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="severity" value="warning"/>
    </module>

    <module name="TreeWalker">

        <!--
        ================================================================================
        Quality standards, avoidance of common sources of errors
        ================================================================================
        -->

        <module name="EmptyBlock">
            <property name="tokens" value="LITERAL_CASE,LITERAL_DEFAULT"/>
            <property name="severity" value="error"/>
        </module>

        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="ignored"/>
            <property name="severity" value="error"/>
        </module>

        <module name="EmptyStatement">
            <property name="severity" value="error"/>
        </module>

        <module name="OneStatementPerLine">
            <property name="severity" value="error"/>
        </module>

        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-2,-1,0,1,2,100"/>
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreFieldDeclaration" value="true"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:magicnumber"/>
        </module>
        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="@checkstyle-suppress:magicnumber"/>
            <property name="onCommentFormat" value="@checkstyle-cancel-suppress"/>
            <property name="checkFormat" value="MagicNumberCheck"/>
        </module>

        <module name="ModifiedControlVariable">
            <property name="severity" value="error"/>
        </module>

        <module name="InnerAssignment">
            <property name="severity" value="error"/>
        </module>

        <module name="HiddenField">
            <property name="severity" value="error"/>
        </module>

        <module name="IllegalToken">
            <property name="tokens" value="LITERAL_CONTINUE"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:continue"/>
        </module>

        <module name="FallThrough">
            <property name="checkLastCaseGroup" value="true"/>
            <property name="reliefPattern" value="fall-through"/>
            <property name="severity" value="error"/>
        </module>

        <module name="MissingSwitchDefault">
            <property name="severity" value="error"/>
        </module>

        <module name="ParameterAssignment">
            <property name="severity" value="error"/>
        </module>

        <module name="RequireThis">
            <property name="checkMethods" value="false"/>
            <property name="checkFields" value="true"/>
            <property name="validateOnlyOverlapping" value="true"/>
            <property name="severity" value="error"/>
        </module>

        <module name="ReturnCount">
            <property name="max" value="1"/>
            <property name="maxForVoid" value="0"/>
            <property name="tokens" value="CTOR_DEF,METHOD_DEF,LAMBDA"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:returncount"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_SWITCH"/>
            <property name="limitedTokens" value="LITERAL_DEFAULT"/>
            <property name="minimumNumber" value="1"/>
            <property name="maximumNumber" value="1"/>
            <property name="severity" value="error"/>
            <property name="id" value="checkstyle:switchdefaultcount"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="FOR_INIT"/>
            <property name="limitedTokens" value="EXPR"/>
            <property name="minimumNumber" value="1"/>
            <property name="severity" value="error"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="FOR_CONDITION"/>
            <property name="limitedTokens" value="EXPR"/>
            <property name="minimumNumber" value="1"/>
            <property name="severity" value="error"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="FOR_ITERATOR"/>
            <property name="limitedTokens" value="EXPR"/>
            <property name="minimumNumber" value="1"/>
            <property name="severity" value="error"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_IF,LITERAL_TRY,LITERAL_CATCH"/>
            <property name="limitedTokens" value="LITERAL_RETURN"/>
            <property name="maximumNumber" value="0"/>
            <property name="maximumDepth" value="1"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_FOR,LITERAL_DO,LITERAL_WHILE,LITERAL_FINALLY"/>
            <property name="limitedTokens" value="LITERAL_RETURN"/>
            <property name="maximumNumber" value="0"/>
            <property name="severity" value="error"/>
        </module>

        <module name="DescendantToken">
            <property name="tokens" value="LITERAL_FINALLY"/>
            <property name="limitedTokens" value="LITERAL_THROWS"/>
            <property name="maximumNumber" value="0"/>
            <property name="severity" value="error"/>
        </module>


        <!--
        ================================================================================
        Imports
        ================================================================================
        -->

        <module name="AvoidStarImport">
            <property name="severity" value="warning"/>
        </module>

        <module name="RedundantImport">
            <property name="severity" value="error"/>
        </module>

        <module name="UnusedImports">
            <property name="severity" value="error"/>
        </module>

        <!--
        ================================================================================
        Package declarations
        ================================================================================
        -->

        <module name="PackageDeclaration">
            <property name="matchDirectoryStructure" value="true"/>
        </module>

        <!--
        ================================================================================
        Java-specific OOP rules
        ================================================================================
        -->

        <module name="CovariantEquals">
            <property name="severity" value="error"/>
            <property name="id" value="checkstyle:covariantequals"/>
        </module>

        <module name="EqualsHashCode">
            <property name="severity" value="error"/>
            <property name="id" value="checkstyle:equalshashcode"/>
        </module>

        <module name="StringLiteralEquality">
            <property name="severity" value="error"/>
            <property name="id" value="checkstyle:stringliteralequality"/>
        </module>

        <!--
        ================================================================================
        Code simplification, avoidance of unnecessarily complex code
        ================================================================================
        -->

        <module name="SimplifyBooleanExpression">
            <property name="severity" value="warning"/>
        </module>

        <module name="SimplifyBooleanReturn">
            <property name="severity" value="warning"/>
        </module>

        <!--
        ================================================================================
        Object construction & destruction, variable initialization checks
        ================================================================================
        -->

        <module name="SuperClone">
            <property name="severity" value="error"/>
        </module>

        <module name="SuperFinalize">
            <property name="severity" value="error"/>
        </module>

        <module name="VariableDeclarationUsageDistance">
            <property name="allowedDistance" value="7"/>
            <property name="validateBetweenScopes" value="true"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:declusagedistance"/>
        </module>

        <module name="TodoComment">
            <property name="format" value="[Tt][Oo][Dd][Oo]"/>
            <property name="severity" value="info"/>
        </module>

        <module name="TodoComment">
            <property name="format" value="([Ff][Ii][Xx][Mm][Ee]|[Xx][Xx][Xx]|[Xx][Xx][Xx])"/>
            <property name="severity" value="warning"/>
        </module>

        <!--
        ================================================================================
        Naming conventions

        Should comply with the naming conventions used in the Java class library in
        general.
        Minimum length of 2.
        ================================================================================
        -->

        <module name="ConstantName">
            <property name="format" value="^([A-Z][A-Z0-9]|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*)$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:constantname"/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:membername"/>
        </module>

        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:variablename"/>
        </module>

        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:finalvariablename"/>
        </module>

        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:localvariablename"/>
        </module>

        <module name="CatchParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:catchparamname"/>
        </module>

        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:methodname"/>
        </module>

        <module name="MethodTypeParameterName">
            <property name="format" value="^([A-Z]|[A-Z][A-Z0-9_]+)$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:methodtypeparamname"/>
        </module>

        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:paramname"/>
        </module>

        <module name="TypeName">
            <property name="format" value="^([A-Z][a-zA-Z0-9]+|Migration_[0-9]{4}(_[0-9]{2}){4}_[a-zA-Z0-9]+)$"/>
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:typename"/>
        </module>

        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="@checkstyle-suppress:namingconvention"/>
            <property name="onCommentFormat" value="@checkstyle-cancel-suppress"/>
            <property name="checkFormat" value="(Constant|Member|StaticVariable|LocalFinalVariable|LocalVariable|CatchParameter|MethodName|MethodTypeParameter|Parameter|Type)NameCheck"/>
        </module>

        <!--
        ================================================================================
        Coding style, code layout
        ================================================================================
        -->

        <module name="LeftCurly">
            <property name="option" value="nl"/>
            <property name="ignoreEnums" value="true"/>
            <property name="tokens" value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_IF,LITERAL_ELSE,CLASS_DEF,INTERFACE_DEF,LITERAL_FOR,LITERAL_WHILE,LITERAL_DO,STATIC_INIT"/>
            <property name="severity" value="error"/>
        </module>

        <module name="RightCurly">
            <property name="option" value="alone"/>
            <!-- check how this rule behaves for inline array initialier: 'new String[] {"test"}' -->
            <property name="tokens" value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_IF,LITERAL_ELSE,CLASS_DEF,METHOD_DEF,CTOR_DEF,LITERAL_FOR,LITERAL_WHILE,LITERAL_DO,STATIC_INIT,INSTANCE_INIT"/>
            <property name="severity" value="error"/>
        </module>

        <module name="NeedBraces">
            <property name="allowSingleLineStatement" value="false"/>
            <property name="allowEmptyLoopBody" value="false"/>
            <property name="severity" value="error"/>
        </module>

        <module name="EmptyLineSeparator">
            <property name="tokens" value="PACKAGE_DEF,IMPORT,CLASS_DEF,INTERFACE_DEF,ENUM_DEF,STATIC_INIT"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="MethodParamPad">
            <property name="allowLineBreaks" value="false"/>
            <property name="option" value="nospace"/>
            <property name="tokens" value="CTOR_DEF,LITERAL_NEW,METHOD_CALL,METHOD_DEF,SUPER_CTOR_CALL,ENUM_CONSTANT_DEF"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA,SEMI,TYPECAST,LITERAL_IF,LITERAL_WHILE,LITERAL_FOR,DO_WHILE"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NoWhitespaceAfter">
            <property name="tokens" value="UNARY_MINUS,INC,DEC,AT,BNOT,LNOT,ARRAY_INIT,ARRAY_DECLARATOR,INDEX_OP"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA,SEMI,POST_INC,POST_DEC,GENERIC_END,ELLIPSIS"/>
            <property name="allowLineBreaks" value="false"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NoWhitespaceBefore">
            <property name="tokens" value="DOT"/>
            <property name="allowLineBreaks" value="true"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="ParenPad">
            <property name="option" value="nospace"/>
            <property name="tokens" value=""/>
            <property name="severity" value="warning"/>
        </module>

        <module name="TypecastParenPad">
            <property name="option" value="nospace"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="GenericWhitespace">
            <property name="severity" value="warning"/>
        </module>

        <module name="OperatorWrap">
            <property name="option" value="eol"/>
            <property name="tokens" value="QUESTION,COLON,EQUAL,NOT_EQUAL,DIV,PLUS,MINUS,STAR,MOD,SR,BSR,GE,GT,SL,LE,LT,BXOR,BOR,LOR,BAND,LAND,LITERAL_INSTANCEOF,TYPE_EXTENSION_AND,ASSIGN,DIV_ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,MOD_ASSIGN,SR_ASSIGN,BSR_ASSIGN,SL_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN,BAND_ASSIGN,METHOD_REF"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="SeparatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT,AT"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="SeparatorWrap">
            <property name="option" value="eol"/>
            <property name="tokens" value="COMMA,SEMI,ELLIPSIS"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="ArrayTypeStyle">
            <property name="javaStyle" value="true"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="ModifierOrder">
            <property name="severity" value="warning"/>
        </module>

        <module name="RedundantModifier">
            <property name="severity" value="warning"/>
        </module>

        <module name="DefaultComesLast">
            <property name="severity" value="warning"/>
        </module>

        <module name="CommentsIndentation">
            <property name="severity" value="warning"/>
            <property name="id" value="checkstyle:commentsindentation"/>
        </module>
        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="@checkstyle-suppress:commentsindentation"/>
            <property name="onCommentFormat" value="@checkstyle-cancel-suppress"/>
            <property name="checkFormat" value="CommentsIndentationCheck"/>
        </module>

        <!-- Disabled; this module does not handle the else - if case correctly
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
        </module>
        -->

        <!-- Disabled; module suggested for future use
        <module name="FinalLocalVariable">
            <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
        </module>
        -->

        <!--
        ================================================================================
        Suppression of violation alerts for marking exceptions to the coding standard
        in the code
        ================================================================================
        -->

        <module name="SuppressWarningsHolder"/>

        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="// Generated by the protocol buffer compiler."/>
            <property name="onCommentFormat" value="END GENERATED CODE"/>
        </module>

        <module name="MultipleStringLiterals">
            <property name="severity" value="warning"/>
            <property name="ignoreStringsRegexp" value=".{1,4}"/>
        </module>

        <module name="NestedForDepth">
            <property name="max" value="4"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NestedIfDepth">
            <property name="max" value="6"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NestedTryDepth">
            <property name="max" value="4"/>
            <property name="severity" value="warning"/>
        </module>

        <module name="NPathComplexity">
            <property name="max" value="2000"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Modules suggested for possible future use
        <module name="FinalParameters">
            <property name="tokens" value="METHOD_DEF,CTOR_DEF,LITERAL_CATCH,FOR_EACH_CLAUSE"/>
            <property name="severity" value="warning"/>
        </module>
        -->

    </module>
</module>

